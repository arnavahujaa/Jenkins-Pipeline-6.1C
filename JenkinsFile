pipeline {
    agent any

    environment {
        // Define the recipient for email notifications
        EMAIL_RECIPIENT = 'arnavahuja66@gmail.com'
    }

    stages {
        stage('Stage 1: Build') {
            steps {
                // Description of the stage
                echo 'The Build stage is responsible for compiling the application code. It uses a build automation tool to download necessary dependencies, compile the source code, and package it into a distributable format.'
                // Example of a tool
                echo 'Example Tool: Maven'
            }
        }

        stage('test') {
            steps {
                // Description of the stage
                echo 'Hey There'
                // Example of a tool
                echo 'Example Tool: OKay!'
            }
        }

        stage('Stage 2: Unit and Integration Tests') {
            steps {
                // Description of the stage
                echo 'In this stage, unit tests and integration tests are executed. Unit tests verify the functionality of individual components. Integration tests validate that different modules or services within the application interact as expected.'
                // Example of a tool
                echo 'Example Tools: JUnit, Selenium'
            }
            post {
                always {
                    mail(
                        to: "${EMAIL_RECIPIENT}",
                        subject: "Pipeline - Unit and Integration Tests Completed",
                        body: "Stage 2 has completed. Status: ${currentBuild.currentResult}. You can view the logs at: ${env.BUILD_URL}console"
                    )
                }
            }
        }

        stage('Stage 3: Code Analysis') {
            steps {
                // Description of the stage
                echo 'This stage scans the code to ensure it adheres to best practices and coding standards. It checks for potential bugs, code smells, and vulnerabilities.'
                // Example of a tool
                echo 'Example Tool: SonarQube'
            }
        }

        stage('Stage 4: Security Scan') {
            steps {
                // Description of the stage
                echo 'This stage performs a security scan on the applicationâ€™s dependencies and codebase to detect known vulnerabilities. It ensures that the software does not contain security flaws.'
                // Example of a tool
                echo 'Example Tool: OWASP Dependency Check'
            }
            post {
                always {
                    mail(
                        to: "${EMAIL_RECIPIENT}",
                        subject: "Pipeline - Security Scan Completed",
                        body: "Stage 4 has completed. Status: ${currentBuild.currentResult}. You can view the logs at: ${env.BUILD_URL}console"
                    )
                }
            }
        }

        stage('Stage 5: Deploy to Staging') {
            steps {
                // Description of the stage
                echo 'In this stage, the application is deployed to a staging environment. Staging environments replicate production, allowing for testing in a "production-like" setting.'
                // Example of a tool
                echo 'Example Tools: AWS EC2, Docker'
            }
        }

        stage('Stage 6: Integration Tests on Staging') {
            steps {
                // Description of the stage
                echo 'After deploying to staging, integration tests are executed on the application to ensure that services and components work together as expected in the staging environment.'
                // Example of a tool
                echo 'Example Tool: Postman'
            }
        }

        stage('Stage 7: Deploy to Production') {
            steps {
                // Description of the stage
                echo 'Once all tests have passed in the staging environment, the application is deployed to the production environment where it becomes available to end-users.'
                // Example of a tool
                echo 'Example Tool: AWS EC2 or Kubernetes'
            }
        }
    }

    post {
        failure {
            mail(
                to: "${EMAIL_RECIPIENT}",
                subject: "Pipeline Failed at ${env.STAGE_NAME}",
                body: "The pipeline has failed at stage: ${env.STAGE_NAME}. Please check the logs for more details."
            )
        }
    }
}
